<?php

/**
 * Implementation of hook_ctools_plugins_directory().
 */
function sso_slave_ctools_plugin_directory($owner, $plugin_type) {
  if ($owner == 'sso_slave' || $owner == 'ctools') {
    return "plugins/$plugin_type";
  }
}

/**
 * Implements hook_ctools_plugin_type().
 */
function sso_slave_ctools_plugin_type() {
  return array(
    'auth_methods' => array(),
  );
}

function sso_slave_init() {
  ctools_include('plugins');
  ctools_get_plugins('ctools', 'export_ui', 'auth_methods');
}

/**
 * Implementation of hook_permissions().
 */
function sso_slave_permissions() {
  return array('administer sso authentication methods' => array(
    'title' => t('Administer SSO Authentication Methods'),
    'description' => t('Allows users to create and administer various SSO Methods'),
    ),
  );
}

/**
 * Implementation of hook_form_alter().
 */
function sso_slave_form_alter(&$form, &$form_state, $form_id) {
  if ($form_id == 'user_login' || $form_id == 'user_login_block') {
    $finalize = array_search('user_login_final_validate', $form['#validate']);
    if ($finalize) {
      unset($form['#validate'][$finalize]);
    }
    $form['#validate'][] = 'sso_slave_user_login_validate';
    $form['#validate'][] = 'user_login_final_validate';
    ctools_include('export');
    $methods = ctools_export_crud_load_all('sso_auth_methods');
    if (count($methods) > 1) {
      foreach ($methods as $name => $method) {
        $options[$name] = $method['method'];
      }
      $form['servers'] = array(
        '#type' => 'select',
        '#title' => t('Authentication Server'),
        '#options' => $options,
        '#required' => TRUE,
      );
    }
    elseif (count($methods) == 1) {
      $keys = array_keys($methods);
      $form['servers'] = array(
        '#type' => 'value',
        '#value' => $keys[0],
      );
    }
  }
}

function sso_slave_user_login_validate(&$form, &$form_state) {
  ctools_include('plugins');
  $method = ctools_export_crud_load('sso_auth_methods', $form_state['values']['servers']);
  if ($callback = ctools_plugin_load_function('sso_slave', 'auth_methods', $method->auth_type, 'validate')) {
    $callback($form, $form_state, $method);
    global $user;
    if ($user->uid) {
      $form_state['uid'] = $user->uid;
    }
  }
}
